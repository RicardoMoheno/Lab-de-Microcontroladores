

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Apr 05 03:05:21 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.35
    15                           ; Generated 05/05/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K50 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _ANSELA	set	3931
    50  0000                     _PORTBbits	set	3969
    51  0000                     _LATAbits	set	3977
    52  0000                     _TRISAbits	set	3986
    53  0000                     _ANSELB	set	3932
    54  0000                     _TRISBbits	set	3987
    55                           
    56                           ; #config settings
    57                           
    58                           	psect	cinit
    59  007F96                     __pcinit:
    60                           	callstack 0
    61  007F96                     start_initialization:
    62                           	callstack 0
    63  007F96                     __initialization:
    64                           	callstack 0
    65  007F96                     end_of_initialization:
    66                           	callstack 0
    67  007F96                     __end_of__initialization:
    68                           	callstack 0
    69  007F96  0100               	movlb	0
    70  007F98  EFD7  F03F         	goto	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMRAM
    73  000001                     __pcstackCOMRAM:
    74                           	callstack 0
    75  000001                     ??_main:
    76                           
    77                           ; 1 bytes @ 0x0
    78  000001                     	ds	2
    79                           
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    82 ;;
    83 ;; *************** function _main *****************
    84 ;; Defined at:
    85 ;;		line 24 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;                  1    wreg      void 
    92 ;; Registers used:
    93 ;;		wreg, status,2, cstack
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    99 ;;      Params:         0       0       0       0       0       0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0
   101 ;;      Temps:          2       0       0       0       0       0       0       0       0
   102 ;;      Totals:         2       0       0       0       0       0       0       0       0
   103 ;;Total ram usage:        2 bytes
   104 ;; Hardware stack levels required when called: 1
   105 ;; This function calls:
   106 ;;		_portsInit
   107 ;; This function is called by:
   108 ;;		Startup code after reset
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           	psect	text0
   113  007FAE                     __ptext0:
   114                           	callstack 0
   115  007FAE                     _main:
   116                           	callstack 30
   117  007FAE                     
   118                           ;main.c: 25:     portsInit();
   119  007FAE  ECCE  F03F         	call	_portsInit	;wreg free
   120  007FB2                     l715:
   121                           
   122                           ;main.c: 27:         if(PORTBbits.RB4 == pushed)
   123  007FB2  B881               	btfsc	129,4,c	;volatile
   124  007FB4  EFDE  F03F         	goto	u11
   125  007FB8  EFE0  F03F         	goto	u10
   126  007FBC                     u11:
   127  007FBC  EFE3  F03F         	goto	l22
   128  007FC0                     u10:
   129  007FC0                     
   130                           ;main.c: 28:             LATAbits.LATA7 = led_OFF;
   131  007FC0  9E89               	bcf	137,7,c	;volatile
   132  007FC2  EFE4  F03F         	goto	l23
   133  007FC6                     l22:
   134                           
   135                           ;main.c: 30:             LATAbits.LATA7 = led_ON;
   136  007FC6  8E89               	bsf	137,7,c	;volatile
   137  007FC8                     l23:
   138                           
   139                           ;main.c: 31:         LATAbits.LATA4 = led_ON;
   140  007FC8  8889               	bsf	137,4,c	;volatile
   141  007FCA                     
   142                           ;main.c: 32:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   143  007FCA  0E02               	movlw	2
   144  007FCC  6E02               	movwf	(??_main+1)^0,c
   145  007FCE  0E45               	movlw	69
   146  007FD0  6E01               	movwf	??_main^0,c
   147  007FD2  0EAA               	movlw	170
   148  007FD4                     u27:
   149  007FD4  2EE8               	decfsz	wreg,f,c
   150  007FD6  D7FE               	bra	u27
   151  007FD8  2E01               	decfsz	??_main^0,f,c
   152  007FDA  D7FC               	bra	u27
   153  007FDC  2E02               	decfsz	(??_main+1)^0,f,c
   154  007FDE  D7FA               	bra	u27
   155  007FE0                     
   156                           ;main.c: 33:         LATAbits.LATA4 = led_OFF;
   157  007FE0  9889               	bcf	137,4,c	;volatile
   158                           
   159                           ;main.c: 34:         _delay((unsigned long)((1000)*(1000000/4000.0)));
   160  007FE2  0E02               	movlw	2
   161  007FE4  6E02               	movwf	(??_main+1)^0,c
   162  007FE6  0E45               	movlw	69
   163  007FE8  6E01               	movwf	??_main^0,c
   164  007FEA  0EAA               	movlw	170
   165  007FEC                     u37:
   166  007FEC  2EE8               	decfsz	wreg,f,c
   167  007FEE  D7FE               	bra	u37
   168  007FF0  2E01               	decfsz	??_main^0,f,c
   169  007FF2  D7FC               	bra	u37
   170  007FF4  2E02               	decfsz	(??_main+1)^0,f,c
   171  007FF6  D7FA               	bra	u37
   172  007FF8  EFD9  F03F         	goto	l715
   173  007FFC  EF00  F000         	goto	start
   174  008000                     __end_of_main:
   175                           	callstack 0
   176                           
   177 ;; *************** function _portsInit *****************
   178 ;; Defined at:
   179 ;;		line 39 in file "main.c"
   180 ;; Parameters:    Size  Location     Type
   181 ;;		None
   182 ;; Auto vars:     Size  Location     Type
   183 ;;		None
   184 ;; Return value:  Size  Location     Type
   185 ;;                  1    wreg      void 
   186 ;; Registers used:
   187 ;;		wreg, status,2
   188 ;; Tracked objects:
   189 ;;		On entry : 0/0
   190 ;;		On exit  : 0/0
   191 ;;		Unchanged: 0/0
   192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   193 ;;      Params:         0       0       0       0       0       0       0       0       0
   194 ;;      Locals:         0       0       0       0       0       0       0       0       0
   195 ;;      Temps:          0       0       0       0       0       0       0       0       0
   196 ;;      Totals:         0       0       0       0       0       0       0       0       0
   197 ;;Total ram usage:        0 bytes
   198 ;; Hardware stack levels used: 1
   199 ;; This function calls:
   200 ;;		Nothing
   201 ;; This function is called by:
   202 ;;		_main
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text1
   207  007F9C                     __ptext1:
   208                           	callstack 0
   209  007F9C                     _portsInit:
   210                           	callstack 30
   211  007F9C                     
   212                           ;main.c: 40:     ANSELA = digital;
   213  007F9C  0E00               	movlw	0
   214  007F9E  010F               	movlb	15	; () banked
   215  007FA0  6F5B               	movwf	91,b	;volatile
   216  007FA2                     
   217                           ; BSR set to: 15
   218                           ;main.c: 41:     TRISAbits.TRISA4 = output;
   219  007FA2  9892               	bcf	146,4,c	;volatile
   220  007FA4                     
   221                           ; BSR set to: 15
   222                           ;main.c: 42:     TRISAbits.TRISA7 = output;
   223  007FA4  9E92               	bcf	146,7,c	;volatile
   224                           
   225                           ;main.c: 43:     ANSELB = digital;
   226  007FA6  0E00               	movlw	0
   227  007FA8  6F5C               	movwf	92,b	;volatile
   228  007FAA                     
   229                           ; BSR set to: 15
   230                           ;main.c: 44:     TRISBbits.TRISB4 = input;
   231  007FAA  8893               	bsf	147,4,c	;volatile
   232  007FAC                     
   233                           ; BSR set to: 15
   234  007FAC  0012               	return		;funcret
   235  007FAE                     __end_of_portsInit:
   236                           	callstack 0
   237  0000                     
   238                           	psect	rparam
   239  0000                     
   240                           	psect	idloc
   241                           
   242                           ;Config register IDLOC0 @ 0x200000
   243                           ;	unspecified, using default values
   244  200000                     	org	2097152
   245  200000  FF                 	db	255
   246                           
   247                           ;Config register IDLOC1 @ 0x200001
   248                           ;	unspecified, using default values
   249  200001                     	org	2097153
   250  200001  FF                 	db	255
   251                           
   252                           ;Config register IDLOC2 @ 0x200002
   253                           ;	unspecified, using default values
   254  200002                     	org	2097154
   255  200002  FF                 	db	255
   256                           
   257                           ;Config register IDLOC3 @ 0x200003
   258                           ;	unspecified, using default values
   259  200003                     	org	2097155
   260  200003  FF                 	db	255
   261                           
   262                           ;Config register IDLOC4 @ 0x200004
   263                           ;	unspecified, using default values
   264  200004                     	org	2097156
   265  200004  FF                 	db	255
   266                           
   267                           ;Config register IDLOC5 @ 0x200005
   268                           ;	unspecified, using default values
   269  200005                     	org	2097157
   270  200005  FF                 	db	255
   271                           
   272                           ;Config register IDLOC6 @ 0x200006
   273                           ;	unspecified, using default values
   274  200006                     	org	2097158
   275  200006  FF                 	db	255
   276                           
   277                           ;Config register IDLOC7 @ 0x200007
   278                           ;	unspecified, using default values
   279  200007                     	org	2097159
   280  200007  FF                 	db	255
   281                           
   282                           	psect	config
   283                           
   284                           ;Config register CONFIG1L @ 0x300000
   285                           ;	PLL Selection
   286                           ;	PLLSEL = PLL4X, 4x clock multiplier
   287                           ;	PLL Enable Configuration bit
   288                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
   289                           ;	CPU System Clock Postscaler
   290                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   291                           ;	Low Speed USB mode with 48 MHz system clock
   292                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   293  300000                     	org	3145728
   294  300000  00                 	db	0
   295                           
   296                           ;Config register CONFIG1H @ 0x300001
   297                           ;	Oscillator Selection
   298                           ;	FOSC = INTOSCIO, Internal oscillator
   299                           ;	Primary Oscillator Shutdown
   300                           ;	PCLKEN = ON, Primary oscillator enabled
   301                           ;	Fail-Safe Clock Monitor
   302                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   303                           ;	Internal/External Oscillator Switchover
   304                           ;	IESO = OFF, Oscillator Switchover mode disabled
   305  300001                     	org	3145729
   306  300001  28                 	db	40
   307                           
   308                           ;Config register CONFIG2L @ 0x300002
   309                           ;	Power-up Timer Enable
   310                           ;	nPWRTEN = OFF, Power up timer disabled
   311                           ;	Brown-out Reset Enable
   312                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   313                           ;	Brown-out Reset Voltage
   314                           ;	BORV = 190, BOR set to 1.9V nominal
   315                           ;	Low-Power Brown-out Reset
   316                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   317  300002                     	org	3145730
   318  300002  5F                 	db	95
   319                           
   320                           ;Config register CONFIG2H @ 0x300003
   321                           ;	Watchdog Timer Enable bits
   322                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   323                           ;	Watchdog Timer Postscaler
   324                           ;	WDTPS = 32768, 1:32768
   325  300003                     	org	3145731
   326  300003  3C                 	db	60
   327                           
   328                           ; Padding undefined space
   329  300004                     	org	3145732
   330  300004  FF                 	db	255
   331                           
   332                           ;Config register CONFIG3H @ 0x300005
   333                           ;	CCP2 MUX bit
   334                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   335                           ;	PORTB A/D Enable bit
   336                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
   337                           ;	Timer3 Clock Input MUX bit
   338                           ;	T3CMX = RC0, T3CKI function is on RC0
   339                           ;	SDO Output MUX bit
   340                           ;	SDOMX = RB3, SDO function is on RB3
   341                           ;	Master Clear Reset Pin Enable
   342                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   343  300005                     	org	3145733
   344  300005  D3                 	db	211
   345                           
   346                           ;Config register CONFIG4L @ 0x300006
   347                           ;	Stack Full/Underflow Reset
   348                           ;	STVREN = ON, Stack full/underflow will cause Reset
   349                           ;	Single-Supply ICSP Enable bit
   350                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   351                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   352                           ;	ICPRT = OFF, ICPORT disabled
   353                           ;	Extended Instruction Set Enable bit
   354                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   355                           ;	Background Debugger Enable bit
   356                           ;	DEBUG = 0x1, unprogrammed default
   357  300006                     	org	3145734
   358  300006  85                 	db	133
   359                           
   360                           ; Padding undefined space
   361  300007                     	org	3145735
   362  300007  FF                 	db	255
   363                           
   364                           ;Config register CONFIG5L @ 0x300008
   365                           ;	Block 0 Code Protect
   366                           ;	CP0 = OFF, Block 0 is not code-protected
   367                           ;	Block 1 Code Protect
   368                           ;	CP1 = OFF, Block 1 is not code-protected
   369                           ;	Block 2 Code Protect
   370                           ;	CP2 = OFF, Block 2 is not code-protected
   371                           ;	Block 3 Code Protect
   372                           ;	CP3 = OFF, Block 3 is not code-protected
   373  300008                     	org	3145736
   374  300008  0F                 	db	15
   375                           
   376                           ;Config register CONFIG5H @ 0x300009
   377                           ;	Boot Block Code Protect
   378                           ;	CPB = OFF, Boot block is not code-protected
   379                           ;	Data EEPROM Code Protect
   380                           ;	CPD = OFF, Data EEPROM is not code-protected
   381  300009                     	org	3145737
   382  300009  C0                 	db	192
   383                           
   384                           ;Config register CONFIG6L @ 0x30000A
   385                           ;	Block 0 Write Protect
   386                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   387                           ;	Block 1 Write Protect
   388                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   389                           ;	Block 2 Write Protect
   390                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   391                           ;	Block 3 Write Protect
   392                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   393  30000A                     	org	3145738
   394  30000A  0F                 	db	15
   395                           
   396                           ;Config register CONFIG6H @ 0x30000B
   397                           ;	Configuration Registers Write Protect
   398                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   399                           ;	Boot Block Write Protect
   400                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   401                           ;	Data EEPROM Write Protect
   402                           ;	WRTD = OFF, Data EEPROM is not write-protected
   403  30000B                     	org	3145739
   404  30000B  E0                 	db	224
   405                           
   406                           ;Config register CONFIG7L @ 0x30000C
   407                           ;	Block 0 Table Read Protect
   408                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   409                           ;	Block 1 Table Read Protect
   410                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   411                           ;	Block 2 Table Read Protect
   412                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   413                           ;	Block 3 Table Read Protect
   414                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   415  30000C                     	org	3145740
   416  30000C  0F                 	db	15
   417                           
   418                           ;Config register CONFIG7H @ 0x30000D
   419                           ;	Boot Block Table Read Protect
   420                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   421  30000D                     	org	3145741
   422  30000D  40                 	db	64
   423                           tosu	equ	0xFFF
   424                           tosh	equ	0xFFE
   425                           tosl	equ	0xFFD
   426                           stkptr	equ	0xFFC
   427                           pclatu	equ	0xFFB
   428                           pclath	equ	0xFFA
   429                           pcl	equ	0xFF9
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           prodh	equ	0xFF4
   435                           prodl	equ	0xFF3
   436                           indf0	equ	0xFEF
   437                           postinc0	equ	0xFEE
   438                           postdec0	equ	0xFED
   439                           preinc0	equ	0xFEC
   440                           plusw0	equ	0xFEB
   441                           fsr0h	equ	0xFEA
   442                           fsr0l	equ	0xFE9
   443                           wreg	equ	0xFE8
   444                           indf1	equ	0xFE7
   445                           postinc1	equ	0xFE6
   446                           postdec1	equ	0xFE5
   447                           preinc1	equ	0xFE4
   448                           plusw1	equ	0xFE3
   449                           fsr1h	equ	0xFE2
   450                           fsr1l	equ	0xFE1
   451                           bsr	equ	0xFE0
   452                           indf2	equ	0xFDF
   453                           postinc2	equ	0xFDE
   454                           postdec2	equ	0xFDD
   455                           preinc2	equ	0xFDC
   456                           plusw2	equ	0xFDB
   457                           fsr2h	equ	0xFDA
   458                           fsr2l	equ	0xFD9
   459                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                          _portsInit
 ---------------------------------------------------------------------------------
 (1) _portsInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _portsInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBIGSFRhhh        6C      0       0      20        0.0%
BITBIGSFRhhl         8      0       0      21        0.0%
BITBIGSFRhl          7      0       0      22        0.0%
BITBIGSFRlh         24      0       0      23        0.0%
BITBIGSFRll          8      0       0      24        0.0%
ABS                  0      0       0      25        0.0%
BIGRAM             7FF      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Apr 05 03:05:21 2022

                     l22 7FC6                       l23 7FC8                       l29 7FAC  
                     u10 7FC0                       u11 7FBC                       u27 7FD4  
                     u37 7FEC                      l711 7FAA                      l705 7F9C  
                    l721 7FE0                      l713 7FAE                      l707 7FA2  
                    l715 7FB2                      l709 7FA4                      l717 7FC0  
                    l719 7FCA                      wreg 000FE8                     _main 7FAE  
                   start 0000             ___param_bank 000000                    ?_main 0001  
        __initialization 7F96             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000                   _ANSELA 000F5B                   _ANSELB 000F5C  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 7F96  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7F96                  __ramtop 0800  
                __ptext0 7FAE                  __ptext1 7F9C     end_of_initialization 7F96  
      __end_of_portsInit 7FAE                _PORTBbits 000F81                _TRISAbits 000F92  
              _TRISBbits 000F93      start_initialization 7F96                 _LATAbits 000F89  
              _portsInit 7F9C                 __Hrparam 0000                 __Lrparam 0000  
             ?_portsInit 0001                 isa$xinst 000000              ??_portsInit 0001  
