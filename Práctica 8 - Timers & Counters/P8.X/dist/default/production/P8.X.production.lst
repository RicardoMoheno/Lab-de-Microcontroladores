

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon May 16 11:42:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Version 2.35
    27                           ; Generated 05/05/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _T1CON	set	4045
    62  0000                     _LATC	set	3979
    63  0000                     _LATCbits	set	3979
    64  0000                     _TRISD	set	3989
    65  0000                     _PIR1bits	set	3998
    66  0000                     _T1GCONbits	set	4044
    67  0000                     _TMR1L	set	4046
    68  0000                     _OSCCON	set	4051
    69  0000                     _TRISAbits	set	3986
    70  0000                     _LATD	set	3980
    71  0000                     _TRISCbits	set	3988
    72  0000                     _T0CON	set	4053
    73  0000                     _TMR1H	set	4047
    74  0000                     _TMR0L	set	4054
    75                           
    76                           	psect	smallconst
    77  000800                     __psmallconst:
    78                           	callstack 0
    79  000800  00                 	db	0
    80  000801                     STR_1:
    81  000801  46                 	db	70	;'F'
    82  000802  72                 	db	114	;'r'
    83  000803  65                 	db	101	;'e'
    84  000804  71                 	db	113	;'q'
    85  000805  75                 	db	117	;'u'
    86  000806  65                 	db	101	;'e'
    87  000807  6E                 	db	110	;'n'
    88  000808  63                 	db	99	;'c'
    89  000809  79                 	db	121	;'y'
    90  00080A  3A                 	db	58	;':'
    91  00080B  00                 	db	0
    92  00080C                     STR_2:
    93  00080C  30                 	db	48	;'0'
    94  00080D  30                 	db	48	;'0'
    95  00080E  30                 	db	48	;'0'
    96  00080F  20                 	db	32
    97  000810  48                 	db	72	;'H'
    98  000811  7A                 	db	122	;'z'
    99  000812  00                 	db	0
   100  000813  00                 	db	0	; dummy byte at the end
   101  0000                     
   102                           ; #config settings
   103                           
   104                           	psect	cinit
   105  000BA2                     __pcinit:
   106                           	callstack 0
   107  000BA2                     start_initialization:
   108                           	callstack 0
   109  000BA2                     __initialization:
   110                           	callstack 0
   111                           
   112                           ; Clear objects allocated to COMRAM (3 bytes)
   113  000BA2  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   114  000BA4  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   115  000BA6  6A15               	clrf	__pbssCOMRAM& (0+255),c
   116  000BA8                     end_of_initialization:
   117                           	callstack 0
   118  000BA8                     __end_of__initialization:
   119                           	callstack 0
   120  000BA8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   121  000BAA  6EF8               	movwf	tblptru,c
   122  000BAC  0100               	movlb	0
   123  000BAE  EFF6  F004         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126  000015                     __pbssCOMRAM:
   127                           	callstack 0
   128  000015                     _count:
   129                           	callstack 0
   130  000015                     	ds	2
   131  000017                     _LCDdir:
   132                           	callstack 0
   133  000017                     	ds	1
   134                           
   135                           	psect	cstackCOMRAM
   136  000001                     __pcstackCOMRAM:
   137                           	callstack 0
   138  000001                     ??_send_to_LCD:
   139  000001                     ?___wmul:
   140                           	callstack 0
   141  000001                     LCD_cmd@cx:
   142                           	callstack 0
   143  000001                     ___wmul@multiplier:
   144                           	callstack 0
   145                           
   146                           ; 2 bytes @ 0x0
   147  000001                     	ds	1
   148  000002                     ??_LCD_init:
   149  000002                     set_LCD_dir@d:
   150                           	callstack 0
   151  000002                     send_to_LCD@xy:
   152                           	callstack 0
   153  000002                     set_cursor_pos@col:
   154                           	callstack 0
   155                           
   156                           ; 1 bytes @ 0x1
   157  000002                     	ds	1
   158  000003                     ??_set_cursor_pos:
   159  000003                     write_string_LCD@s:
   160                           	callstack 0
   161  000003                     ___wmul@multiplicand:
   162                           	callstack 0
   163                           
   164                           ; 2 bytes @ 0x2
   165  000003                     	ds	2
   166  000005                     set_cursor_pos@row:
   167                           	callstack 0
   168  000005                     ___wmul@product:
   169                           	callstack 0
   170                           
   171                           ; 2 bytes @ 0x4
   172  000005                     	ds	1
   173  000006                     set_cursor_pos@Pos:
   174                           	callstack 0
   175                           
   176                           ; 1 bytes @ 0x5
   177  000006                     	ds	1
   178  000007                     ?___awdiv:
   179                           	callstack 0
   180  000007                     ___awdiv@dividend:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x6
   184  000007                     	ds	2
   185  000009                     ___awdiv@divisor:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x8
   189  000009                     	ds	2
   190  00000B                     ___awdiv@counter:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0xA
   194  00000B                     	ds	1
   195  00000C                     ___awdiv@sign:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0xB
   199  00000C                     	ds	1
   200  00000D                     ___awdiv@quotient:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0xC
   204  00000D                     	ds	2
   205  00000F                     write_int_LCD@x:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0xE
   209  00000F                     	ds	2
   210  000011                     ??_write_int_LCD:
   211                           
   212                           ; 1 bytes @ 0x10
   213  000011                     	ds	1
   214  000012                     write_int_LCD@UnitDigit:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x11
   218  000012                     	ds	1
   219  000013                     write_int_LCD@TenthDigit:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x12
   223  000013                     	ds	1
   224  000014                     write_int_LCD@HundrethDigit:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x13
   228  000014                     	ds	1
   229  000015                     
   230                           ; 1 bytes @ 0x14
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 16 in file "mainP8.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   250 ;;      Params:         0       0       0       0       0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called: 2
   256 ;; This function calls:
   257 ;;		_LCD_init
   258 ;;		_measure
   259 ;;		_ports_init
   260 ;;		_set_LCD_dir
   261 ;;		_set_cursor_pos
   262 ;;		_write_int_LCD
   263 ;;		_write_string_LCD
   264 ;; This function is called by:
   265 ;;		Startup code after reset
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text0
   270  0009EC                     __ptext0:
   271                           	callstack 0
   272  0009EC                     _main:
   273                           	callstack 29
   274  0009EC                     
   275                           ;mainP8.c: 17:     OSCCON = 0x34;
   276  0009EC  0E34               	movlw	52
   277  0009EE  6ED3               	movwf	211,c	;volatile
   278  0009F0                     
   279                           ;mainP8.c: 18:     ports_init();
   280  0009F0  ECD9  F005         	call	_ports_init	;wreg free
   281                           
   282                           ;mainP8.c: 19:     LCD_init();
   283  0009F4  EC21  F005         	call	_LCD_init	;wreg free
   284  0009F8                     
   285                           ;mainP8.c: 20:     write_string_LCD("Frequency:");
   286  0009F8  0E01               	movlw	low STR_1
   287  0009FA  6E03               	movwf	write_string_LCD@s^0,c
   288  0009FC  0E08               	movlw	high STR_1
   289  0009FE  6E04               	movwf	(write_string_LCD@s+1)^0,c
   290  000A00  EC88  F005         	call	_write_string_LCD	;wreg free
   291  000A04                     
   292                           ;mainP8.c: 21:     set_cursor_pos(1,0);
   293  000A04  0E00               	movlw	0
   294  000A06  6E02               	movwf	set_cursor_pos@col^0,c
   295  000A08  0E01               	movlw	1
   296  000A0A  ECCA  F004         	call	_set_cursor_pos
   297  000A0E                     
   298                           ;mainP8.c: 22:     write_string_LCD("000 Hz");
   299  000A0E  0E0C               	movlw	low STR_2
   300  000A10  6E03               	movwf	write_string_LCD@s^0,c
   301  000A12  0E08               	movlw	high STR_2
   302  000A14  6E04               	movwf	(write_string_LCD@s+1)^0,c
   303  000A16  EC88  F005         	call	_write_string_LCD	;wreg free
   304  000A1A                     
   305                           ;mainP8.c: 23:     set_LCD_dir('L');
   306  000A1A  0E4C               	movlw	76
   307  000A1C  EC4A  F005         	call	_set_LCD_dir
   308  000A20                     l1106:
   309                           
   310                           ;mainP8.c: 25:         set_cursor_pos(1,2);
   311  000A20  0E02               	movlw	2
   312  000A22  6E02               	movwf	set_cursor_pos@col^0,c
   313  000A24  0E01               	movlw	1
   314  000A26  ECCA  F004         	call	_set_cursor_pos
   315  000A2A                     
   316                           ;mainP8.c: 26:         measure();
   317  000A2A  EC6A  F005         	call	_measure	;wreg free
   318  000A2E                     
   319                           ;mainP8.c: 27:         write_int_LCD(count);
   320  000A2E  C015  F00F         	movff	_count,write_int_LCD@x
   321  000A32  C016  F010         	movff	_count+1,write_int_LCD@x+1
   322  000A36  EC6C  F004         	call	_write_int_LCD	;wreg free
   323  000A3A  EF10  F005         	goto	l1106
   324  000A3E  EF00  F000         	goto	start
   325  000A42                     __end_of_main:
   326                           	callstack 0
   327                           
   328 ;; *************** function _write_string_LCD *****************
   329 ;; Defined at:
   330 ;;		line 82 in file "LCD_disp_Driver.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;  s               2    2[COMRAM] PTR const unsigned char 
   333 ;;		 -> STR_2(7), STR_1(11), 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         2       0       0       0       0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0       0       0
   348 ;;      Totals:         2       0       0       0       0       0       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; Hardware stack levels required when called: 1
   352 ;; This function calls:
   353 ;;		_send_to_LCD
   354 ;; This function is called by:
   355 ;;		_main
   356 ;; This function uses a non-reentrant model
   357 ;;
   358                           
   359                           	psect	text1
   360  000B10                     __ptext1:
   361                           	callstack 0
   362  000B10                     _write_string_LCD:
   363                           	callstack 29
   364  000B10                     
   365                           ;LCD_disp_Driver.c: 83:     while(*s)
   366  000B10  EF94  F005         	goto	l1076
   367  000B14                     l1072:
   368                           
   369                           ;LCD_disp_Driver.c: 84:         send_to_LCD(*s++);
   370  000B14  C003  FFF6         	movff	write_string_LCD@s,tblptrl
   371  000B18  C004  FFF7         	movff	write_string_LCD@s+1,tblptrh
   372  000B1C                     	if	0	;tblptru may be non-zero
   373  000B1C                     	endif
   374  000B1C                     	if	0	;tblptru may be non-zero
   375  000B1C                     	endif
   376  000B1C  0008               	tblrd		*
   377  000B1E  50F5               	movf	tablat,w,c
   378  000B20  ECB6  F005         	call	_send_to_LCD
   379  000B24  4A03               	infsnz	write_string_LCD@s^0,f,c
   380  000B26  2A04               	incf	(write_string_LCD@s+1)^0,f,c
   381  000B28                     l1076:
   382                           
   383                           ;LCD_disp_Driver.c: 83:     while(*s)
   384  000B28  C003  FFF6         	movff	write_string_LCD@s,tblptrl
   385  000B2C  C004  FFF7         	movff	write_string_LCD@s+1,tblptrh
   386  000B30                     	if	0	;tblptru may be non-zero
   387  000B30                     	endif
   388  000B30                     	if	0	;tblptru may be non-zero
   389  000B30                     	endif
   390  000B30  0008               	tblrd		*
   391  000B32  50F5               	movf	tablat,w,c
   392  000B34  0900               	iorlw	0
   393  000B36  A4D8               	btfss	status,2,c
   394  000B38  EFA0  F005         	goto	u231
   395  000B3C  EFA2  F005         	goto	u230
   396  000B40                     u231:
   397  000B40  EF8A  F005         	goto	l1072
   398  000B44                     u230:
   399  000B44  0012               	return		;funcret
   400  000B46                     __end_of_write_string_LCD:
   401                           	callstack 0
   402                           
   403 ;; *************** function _write_int_LCD *****************
   404 ;; Defined at:
   405 ;;		line 87 in file "LCD_disp_Driver.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  x               2   14[COMRAM] int 
   408 ;; Auto vars:     Size  Location     Type
   409 ;;  HundrethDigi    1   19[COMRAM] unsigned char 
   410 ;;  TenthDigit      1   18[COMRAM] unsigned char 
   411 ;;  UnitDigit       1   17[COMRAM] unsigned char 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   421 ;;      Params:         2       0       0       0       0       0       0       0       0
   422 ;;      Locals:         3       0       0       0       0       0       0       0       0
   423 ;;      Temps:          1       0       0       0       0       0       0       0       0
   424 ;;      Totals:         6       0       0       0       0       0       0       0       0
   425 ;;Total ram usage:        6 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 1
   428 ;; This function calls:
   429 ;;		___awdiv
   430 ;;		___wmul
   431 ;;		_send_to_LCD
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text2
   438  0008D8                     __ptext2:
   439                           	callstack 0
   440  0008D8                     _write_int_LCD:
   441                           	callstack 29
   442  0008D8                     
   443                           ;LCD_disp_Driver.c: 89:     unsigned char TenthDigit = 0;
   444  0008D8  0E00               	movlw	0
   445  0008DA  6E13               	movwf	write_int_LCD@TenthDigit^0,c
   446                           
   447                           ;LCD_disp_Driver.c: 90:     unsigned char HundrethDigit = 0;
   448  0008DC  0E00               	movlw	0
   449  0008DE  6E14               	movwf	write_int_LCD@HundrethDigit^0,c
   450  0008E0                     
   451                           ;LCD_disp_Driver.c: 91:     HundrethDigit = (x/100);
   452  0008E0  C00F  F007         	movff	write_int_LCD@x,___awdiv@dividend
   453  0008E4  C010  F008         	movff	write_int_LCD@x+1,___awdiv@dividend+1
   454  0008E8  0E00               	movlw	0
   455  0008EA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   456  0008EC  0E64               	movlw	100
   457  0008EE  6E09               	movwf	___awdiv@divisor^0,c
   458  0008F0  EC0A  F004         	call	___awdiv	;wreg free
   459  0008F4  5007               	movf	?___awdiv^0,w,c
   460  0008F6  6E14               	movwf	write_int_LCD@HundrethDigit^0,c
   461  0008F8                     
   462                           ;LCD_disp_Driver.c: 92:     TenthDigit = ((x - HundrethDigit*100)/10);
   463  0008F8  C014  F001         	movff	write_int_LCD@HundrethDigit,___wmul@multiplier
   464  0008FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
   465  0008FE  0EFF               	movlw	255
   466  000900  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   467  000902  0E9C               	movlw	156
   468  000904  6E03               	movwf	___wmul@multiplicand^0,c
   469  000906  ECA3  F005         	call	___wmul	;wreg free
   470  00090A  500F               	movf	write_int_LCD@x^0,w,c
   471  00090C  2401               	addwf	?___wmul^0,w,c
   472  00090E  6E07               	movwf	___awdiv@dividend^0,c
   473  000910  5010               	movf	(write_int_LCD@x+1)^0,w,c
   474  000912  2002               	addwfc	(?___wmul+1)^0,w,c
   475  000914  6E08               	movwf	(___awdiv@dividend+1)^0,c
   476  000916  0E00               	movlw	0
   477  000918  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   478  00091A  0E0A               	movlw	10
   479  00091C  6E09               	movwf	___awdiv@divisor^0,c
   480  00091E  EC0A  F004         	call	___awdiv	;wreg free
   481  000922  5007               	movf	?___awdiv^0,w,c
   482  000924  6E13               	movwf	write_int_LCD@TenthDigit^0,c
   483  000926                     
   484                           ;LCD_disp_Driver.c: 93:     UnitDigit = x - TenthDigit*10 - HundrethDigit*100;
   485  000926  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   486  000928  0D9C               	mullw	156
   487  00092A  CFF3 F011          	movff	prodl,??_write_int_LCD
   488  00092E  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   489  000930  0DF6               	mullw	246
   490  000932  50F3               	movf	243,w,c
   491  000934  2411               	addwf	??_write_int_LCD^0,w,c
   492  000936  240F               	addwf	write_int_LCD@x^0,w,c
   493  000938  6E12               	movwf	write_int_LCD@UnitDigit^0,c
   494  00093A                     
   495                           ;LCD_disp_Driver.c: 94:     if(LCDdir == 'R'){
   496  00093A  0E52               	movlw	82
   497  00093C  1817               	xorwf	_LCDdir^0,w,c
   498  00093E  A4D8               	btfss	status,2,c
   499  000940  EFA4  F004         	goto	u241
   500  000944  EFA6  F004         	goto	u240
   501  000948                     u241:
   502  000948  EFB4  F004         	goto	l1090
   503  00094C                     u240:
   504  00094C                     
   505                           ;LCD_disp_Driver.c: 95:     send_to_LCD(HundrethDigit+'0');
   506  00094C  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   507  00094E  0F30               	addlw	48
   508  000950  ECB6  F005         	call	_send_to_LCD
   509                           
   510                           ;LCD_disp_Driver.c: 96:     send_to_LCD(TenthDigit+'0');
   511  000954  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   512  000956  0F30               	addlw	48
   513  000958  ECB6  F005         	call	_send_to_LCD
   514                           
   515                           ;LCD_disp_Driver.c: 97:     send_to_LCD(UnitDigit+'0');
   516  00095C  5012               	movf	write_int_LCD@UnitDigit^0,w,c
   517  00095E  0F30               	addlw	48
   518  000960  ECB6  F005         	call	_send_to_LCD
   519                           
   520                           ;LCD_disp_Driver.c: 98:     } else if(LCDdir == 'L'){
   521  000964  EFC9  F004         	goto	l65
   522  000968                     l1090:
   523  000968  0E4C               	movlw	76
   524  00096A  1817               	xorwf	_LCDdir^0,w,c
   525  00096C  A4D8               	btfss	status,2,c
   526  00096E  EFBB  F004         	goto	u251
   527  000972  EFBD  F004         	goto	u250
   528  000976                     u251:
   529  000976  EFC9  F004         	goto	l65
   530  00097A                     u250:
   531  00097A                     
   532                           ;LCD_disp_Driver.c: 99:         send_to_LCD(UnitDigit+'0');
   533  00097A  5012               	movf	write_int_LCD@UnitDigit^0,w,c
   534  00097C  0F30               	addlw	48
   535  00097E  ECB6  F005         	call	_send_to_LCD
   536                           
   537                           ;LCD_disp_Driver.c: 100:         send_to_LCD(TenthDigit+'0');
   538  000982  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   539  000984  0F30               	addlw	48
   540  000986  ECB6  F005         	call	_send_to_LCD
   541                           
   542                           ;LCD_disp_Driver.c: 101:         send_to_LCD(HundrethDigit+'0');
   543  00098A  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   544  00098C  0F30               	addlw	48
   545  00098E  ECB6  F005         	call	_send_to_LCD
   546  000992                     l65:
   547  000992  0012               	return		;funcret
   548  000994                     __end_of_write_int_LCD:
   549                           	callstack 0
   550                           
   551 ;; *************** function _send_to_LCD *****************
   552 ;; Defined at:
   553 ;;		line 44 in file "LCD_disp_Driver.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  xy              1    wreg     unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  xy              1    1[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         0       0       0       0       0       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0       0       0       0       0
   569 ;;      Temps:          1       0       0       0       0       0       0       0       0
   570 ;;      Totals:         2       0       0       0       0       0       0       0       0
   571 ;;Total ram usage:        2 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; This function calls:
   574 ;;		Nothing
   575 ;; This function is called by:
   576 ;;		_write_string_LCD
   577 ;;		_write_int_LCD
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           	psect	text3
   582  000B6C                     __ptext3:
   583                           	callstack 0
   584  000B6C                     _send_to_LCD:
   585                           	callstack 29
   586                           
   587                           ;incstack = 0
   588                           ;send_to_LCD@xy stored from wreg
   589  000B6C  6E02               	movwf	send_to_LCD@xy^0,c
   590  000B6E                     
   591                           ;LCD_disp_Driver.c: 45:     LATCbits.LATC2 = 1;
   592  000B6E  848B               	bsf	139,2,c	;volatile
   593                           
   594                           ;LCD_disp_Driver.c: 46:     LATCbits.LATC1 = 0;
   595  000B70  928B               	bcf	139,1,c	;volatile
   596                           
   597                           ;LCD_disp_Driver.c: 47:     LATCbits.LATC0 = 1;
   598  000B72  808B               	bsf	139,0,c	;volatile
   599  000B74                     
   600                           ;LCD_disp_Driver.c: 48:     LATD = xy;
   601  000B74  C002  FF8C         	movff	send_to_LCD@xy,3980	;volatile
   602  000B78                     
   603                           ;LCD_disp_Driver.c: 49:     __nop();
   604  000B78  F000               	nop	
   605  000B7A                     
   606                           ;LCD_disp_Driver.c: 50:     __nop();
   607  000B7A  F000               	nop	
   608  000B7C                     
   609                           ;LCD_disp_Driver.c: 51:     LATCbits.LATC0 = 0;
   610  000B7C  908B               	bcf	139,0,c	;volatile
   611  000B7E                     
   612                           ;LCD_disp_Driver.c: 52:     _delay((unsigned long)((250)*(1000000/4000.0)));
   613  000B7E  0E52               	movlw	82
   614  000B80  6E01               	movwf	??_send_to_LCD^0,c
   615  000B82  0E2A               	movlw	42
   616  000B84                     u267:
   617  000B84  2EE8               	decfsz	wreg,f,c
   618  000B86  D7FE               	bra	u267
   619  000B88  2E01               	decfsz	??_send_to_LCD^0,f,c
   620  000B8A  D7FC               	bra	u267
   621  000B8C  0012               	return		;funcret
   622  000B8E                     __end_of_send_to_LCD:
   623                           	callstack 0
   624                           
   625 ;; *************** function ___wmul *****************
   626 ;; Defined at:
   627 ;;		line 15 in file "D:\MPLABxIDE\pic\sources\c99\common\Umul16.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  multiplier      2    0[COMRAM] unsigned int 
   630 ;;  multiplicand    2    2[COMRAM] unsigned int 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  product         2    4[COMRAM] unsigned int 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2    0[COMRAM] unsigned int 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, prodl, prodh
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   642 ;;      Params:         4       0       0       0       0       0       0       0       0
   643 ;;      Locals:         2       0       0       0       0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0
   645 ;;      Totals:         6       0       0       0       0       0       0       0       0
   646 ;;Total ram usage:        6 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_write_int_LCD
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  000B46                     __ptext4:
   657                           	callstack 0
   658  000B46                     ___wmul:
   659                           	callstack 29
   660  000B46  5001               	movf	___wmul@multiplier^0,w,c
   661  000B48  0203               	mulwf	___wmul@multiplicand^0,c
   662  000B4A  CFF3 F005          	movff	prodl,___wmul@product
   663  000B4E  CFF4 F006          	movff	prodh,___wmul@product+1
   664  000B52  5001               	movf	___wmul@multiplier^0,w,c
   665  000B54  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   666  000B56  50F3               	movf	243,w,c
   667  000B58  2606               	addwf	(___wmul@product+1)^0,f,c
   668  000B5A  5002               	movf	(___wmul@multiplier+1)^0,w,c
   669  000B5C  0203               	mulwf	___wmul@multiplicand^0,c
   670  000B5E  50F3               	movf	243,w,c
   671  000B60  2606               	addwf	(___wmul@product+1)^0,f,c
   672  000B62  C005  F001         	movff	___wmul@product,?___wmul
   673  000B66  C006  F002         	movff	___wmul@product+1,?___wmul+1
   674  000B6A  0012               	return		;funcret
   675  000B6C                     __end_of___wmul:
   676                           	callstack 0
   677                           
   678 ;; *************** function ___awdiv *****************
   679 ;; Defined at:
   680 ;;		line 7 in file "D:\MPLABxIDE\pic\sources\c99\common\awdiv.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  dividend        2    6[COMRAM] int 
   683 ;;  divisor         2    8[COMRAM] int 
   684 ;; Auto vars:     Size  Location     Type
   685 ;;  quotient        2   12[COMRAM] int 
   686 ;;  sign            1   11[COMRAM] unsigned char 
   687 ;;  counter         1   10[COMRAM] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  2    6[COMRAM] int 
   690 ;; Registers used:
   691 ;;		wreg, status,2, status,0
   692 ;; Tracked objects:
   693 ;;		On entry : 0/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   697 ;;      Params:         4       0       0       0       0       0       0       0       0
   698 ;;      Locals:         4       0       0       0       0       0       0       0       0
   699 ;;      Temps:          0       0       0       0       0       0       0       0       0
   700 ;;      Totals:         8       0       0       0       0       0       0       0       0
   701 ;;Total ram usage:        8 bytes
   702 ;; Hardware stack levels used: 1
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_write_int_LCD
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text5
   711  000814                     __ptext5:
   712                           	callstack 0
   713  000814                     ___awdiv:
   714                           	callstack 29
   715  000814  0E00               	movlw	0
   716  000816  6E0C               	movwf	___awdiv@sign^0,c
   717  000818  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   718  00081A  EF13  F004         	goto	u170
   719  00081E  EF11  F004         	goto	u171
   720  000822                     u171:
   721  000822  EF19  F004         	goto	l1016
   722  000826                     u170:
   723  000826  6C09               	negf	___awdiv@divisor^0,c
   724  000828  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   725  00082A  B0D8               	btfsc	status,0,c
   726  00082C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   727  00082E  0E01               	movlw	1
   728  000830  6E0C               	movwf	___awdiv@sign^0,c
   729  000832                     l1016:
   730  000832  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   731  000834  EF20  F004         	goto	u180
   732  000838  EF1E  F004         	goto	u181
   733  00083C                     u181:
   734  00083C  EF26  F004         	goto	l1022
   735  000840                     u180:
   736  000840  6C07               	negf	___awdiv@dividend^0,c
   737  000842  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   738  000844  B0D8               	btfsc	status,0,c
   739  000846  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   740  000848  0E01               	movlw	1
   741  00084A  1A0C               	xorwf	___awdiv@sign^0,f,c
   742  00084C                     l1022:
   743  00084C  0E00               	movlw	0
   744  00084E  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   745  000850  0E00               	movlw	0
   746  000852  6E0D               	movwf	___awdiv@quotient^0,c
   747  000854  5009               	movf	___awdiv@divisor^0,w,c
   748  000856  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   749  000858  B4D8               	btfsc	status,2,c
   750  00085A  EF31  F004         	goto	u191
   751  00085E  EF33  F004         	goto	u190
   752  000862                     u191:
   753  000862  EF5B  F004         	goto	l1044
   754  000866                     u190:
   755  000866  0E01               	movlw	1
   756  000868  6E0B               	movwf	___awdiv@counter^0,c
   757  00086A  EF3B  F004         	goto	l1030
   758  00086E                     l1028:
   759  00086E  90D8               	bcf	status,0,c
   760  000870  3609               	rlcf	___awdiv@divisor^0,f,c
   761  000872  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   762  000874  2A0B               	incf	___awdiv@counter^0,f,c
   763  000876                     l1030:
   764  000876  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   765  000878  EF40  F004         	goto	u201
   766  00087C  EF42  F004         	goto	u200
   767  000880                     u201:
   768  000880  EF37  F004         	goto	l1028
   769  000884                     u200:
   770  000884                     l1032:
   771  000884  90D8               	bcf	status,0,c
   772  000886  360D               	rlcf	___awdiv@quotient^0,f,c
   773  000888  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   774  00088A  5009               	movf	___awdiv@divisor^0,w,c
   775  00088C  5C07               	subwf	___awdiv@dividend^0,w,c
   776  00088E  500A               	movf	(___awdiv@divisor+1)^0,w,c
   777  000890  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   778  000892  A0D8               	btfss	status,0,c
   779  000894  EF4E  F004         	goto	u211
   780  000898  EF50  F004         	goto	u210
   781  00089C                     u211:
   782  00089C  EF55  F004         	goto	l1040
   783  0008A0                     u210:
   784  0008A0  5009               	movf	___awdiv@divisor^0,w,c
   785  0008A2  5E07               	subwf	___awdiv@dividend^0,f,c
   786  0008A4  500A               	movf	(___awdiv@divisor+1)^0,w,c
   787  0008A6  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   788  0008A8  800D               	bsf	___awdiv@quotient^0,0,c
   789  0008AA                     l1040:
   790  0008AA  90D8               	bcf	status,0,c
   791  0008AC  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   792  0008AE  3209               	rrcf	___awdiv@divisor^0,f,c
   793  0008B0  2E0B               	decfsz	___awdiv@counter^0,f,c
   794  0008B2  EF42  F004         	goto	l1032
   795  0008B6                     l1044:
   796  0008B6  500C               	movf	___awdiv@sign^0,w,c
   797  0008B8  B4D8               	btfsc	status,2,c
   798  0008BA  EF61  F004         	goto	u221
   799  0008BE  EF63  F004         	goto	u220
   800  0008C2                     u221:
   801  0008C2  EF67  F004         	goto	l1048
   802  0008C6                     u220:
   803  0008C6  6C0D               	negf	___awdiv@quotient^0,c
   804  0008C8  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   805  0008CA  B0D8               	btfsc	status,0,c
   806  0008CC  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   807  0008CE                     l1048:
   808  0008CE  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   809  0008D2  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   810  0008D6  0012               	return		;funcret
   811  0008D8                     __end_of___awdiv:
   812                           	callstack 0
   813                           
   814 ;; *************** function _set_cursor_pos *****************
   815 ;; Defined at:
   816 ;;		line 55 in file "LCD_disp_Driver.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;  row             1    wreg     unsigned char 
   819 ;;  col             1    1[COMRAM] unsigned char 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  row             1    4[COMRAM] unsigned char 
   822 ;;  Pos             1    5[COMRAM] unsigned char 
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   832 ;;      Params:         1       0       0       0       0       0       0       0       0
   833 ;;      Locals:         2       0       0       0       0       0       0       0       0
   834 ;;      Temps:          2       0       0       0       0       0       0       0       0
   835 ;;      Totals:         5       0       0       0       0       0       0       0       0
   836 ;;Total ram usage:        5 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 1
   839 ;; This function calls:
   840 ;;		_LCD_cmd
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text6
   847  000994                     __ptext6:
   848                           	callstack 0
   849  000994                     _set_cursor_pos:
   850                           	callstack 29
   851                           
   852                           ;incstack = 0
   853                           ;set_cursor_pos@row stored from wreg
   854  000994  6E05               	movwf	set_cursor_pos@row^0,c
   855  000996                     
   856                           ;LCD_disp_Driver.c: 57:     switch (row){
   857  000996  EFE0  F004         	goto	l1064
   858  00099A                     l1054:
   859                           
   860                           ;LCD_disp_Driver.c: 59:             Pos = 0x80|col;
   861  00099A  5002               	movf	set_cursor_pos@col^0,w,c
   862  00099C  0980               	iorlw	128
   863  00099E  6E06               	movwf	set_cursor_pos@Pos^0,c
   864  0009A0                     
   865                           ;LCD_disp_Driver.c: 60:             LCD_cmd(Pos);
   866  0009A0  5006               	movf	set_cursor_pos@Pos^0,w,c
   867  0009A2  ECC7  F005         	call	_LCD_cmd
   868                           
   869                           ;LCD_disp_Driver.c: 61:         } break;
   870  0009A6  EFF5  F004         	goto	l41
   871  0009AA                     l1058:
   872                           
   873                           ;LCD_disp_Driver.c: 63:             Pos = 0xC0|col;
   874  0009AA  5002               	movf	set_cursor_pos@col^0,w,c
   875  0009AC  09C0               	iorlw	192
   876  0009AE  6E06               	movwf	set_cursor_pos@Pos^0,c
   877  0009B0                     
   878                           ;LCD_disp_Driver.c: 64:             LCD_cmd(Pos);
   879  0009B0  5006               	movf	set_cursor_pos@Pos^0,w,c
   880  0009B2  ECC7  F005         	call	_LCD_cmd
   881                           
   882                           ;LCD_disp_Driver.c: 65:         } break;
   883  0009B6  EFF5  F004         	goto	l41
   884  0009BA                     l40:
   885  0009BA  F000               	nop	
   886  0009BC  EFF5  F004         	goto	l41
   887  0009C0                     l1064:
   888  0009C0  5005               	movf	set_cursor_pos@row^0,w,c
   889  0009C2  6E03               	movwf	??_set_cursor_pos^0,c
   890  0009C4  6A04               	clrf	(??_set_cursor_pos+1)^0,c
   891                           
   892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   893                           ; Switch size 1, requested type "simple"
   894                           ; Number of cases is 1, Range of values is 0 to 0
   895                           ; switch strategies available:
   896                           ; Name         Instructions Cycles
   897                           ; simple_byte            4     3 (average)
   898                           ;	Chosen strategy is simple_byte
   899  0009C6  5004               	movf	(??_set_cursor_pos+1)^0,w,c
   900  0009C8  0A00               	xorlw	0	; case 0
   901  0009CA  B4D8               	btfsc	status,2,c
   902  0009CC  EFEA  F004         	goto	l1116
   903  0009D0  EFDD  F004         	goto	l40
   904  0009D4                     l1116:
   905                           
   906                           ; Switch size 1, requested type "simple"
   907                           ; Number of cases is 2, Range of values is 0 to 1
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            7     4 (average)
   911                           ;	Chosen strategy is simple_byte
   912  0009D4  5003               	movf	??_set_cursor_pos^0,w,c
   913  0009D6  0A00               	xorlw	0	; case 0
   914  0009D8  B4D8               	btfsc	status,2,c
   915  0009DA  EFCD  F004         	goto	l1054
   916  0009DE  0A01               	xorlw	1	; case 1
   917  0009E0  B4D8               	btfsc	status,2,c
   918  0009E2  EFD5  F004         	goto	l1058
   919  0009E6  EFDD  F004         	goto	l40
   920  0009EA                     l41:
   921  0009EA  0012               	return		;funcret
   922  0009EC                     __end_of_set_cursor_pos:
   923                           	callstack 0
   924                           
   925 ;; *************** function _set_LCD_dir *****************
   926 ;; Defined at:
   927 ;;		line 34 in file "LCD_disp_Driver.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  d               1    wreg     unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  d               1    1[COMRAM] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   941 ;;      Params:         0       0       0       0       0       0       0       0       0
   942 ;;      Locals:         1       0       0       0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0
   944 ;;      Totals:         1       0       0       0       0       0       0       0       0
   945 ;;Total ram usage:        1 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 1
   948 ;; This function calls:
   949 ;;		_LCD_cmd
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text7
   956  000A94                     __ptext7:
   957                           	callstack 0
   958  000A94                     _set_LCD_dir:
   959                           	callstack 29
   960                           
   961                           ;incstack = 0
   962                           ;set_LCD_dir@d stored from wreg
   963  000A94  6E02               	movwf	set_LCD_dir@d^0,c
   964  000A96                     
   965                           ;LCD_disp_Driver.c: 35:     if(d == 'L'){
   966  000A96  0E4C               	movlw	76
   967  000A98  1802               	xorwf	set_LCD_dir@d^0,w,c
   968  000A9A  A4D8               	btfss	status,2,c
   969  000A9C  EF52  F005         	goto	u71
   970  000AA0  EF54  F005         	goto	u70
   971  000AA4                     u71:
   972  000AA4  EF5B  F005         	goto	l896
   973  000AA8                     u70:
   974  000AA8                     
   975                           ;LCD_disp_Driver.c: 36:         LCD_cmd(0b00000100);
   976  000AA8  0E04               	movlw	4
   977  000AAA  ECC7  F005         	call	_LCD_cmd
   978  000AAE                     
   979                           ;LCD_disp_Driver.c: 37:         LCDdir = 'L';
   980  000AAE  0E4C               	movlw	76
   981  000AB0  6E17               	movwf	_LCDdir^0,c
   982                           
   983                           ;LCD_disp_Driver.c: 38:     } else if (d == 'R'){
   984  000AB2  EF69  F005         	goto	l30
   985  000AB6                     l896:
   986  000AB6  0E52               	movlw	82
   987  000AB8  1802               	xorwf	set_LCD_dir@d^0,w,c
   988  000ABA  A4D8               	btfss	status,2,c
   989  000ABC  EF62  F005         	goto	u81
   990  000AC0  EF64  F005         	goto	u80
   991  000AC4                     u81:
   992  000AC4  EF69  F005         	goto	l30
   993  000AC8                     u80:
   994  000AC8                     
   995                           ;LCD_disp_Driver.c: 39:         LCD_cmd(0b00000110);
   996  000AC8  0E06               	movlw	6
   997  000ACA  ECC7  F005         	call	_LCD_cmd
   998  000ACE                     
   999                           ;LCD_disp_Driver.c: 40:         LCDdir = 'R';
  1000  000ACE  0E52               	movlw	82
  1001  000AD0  6E17               	movwf	_LCDdir^0,c
  1002  000AD2                     l30:
  1003  000AD2  0012               	return		;funcret
  1004  000AD4                     __end_of_set_LCD_dir:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function _ports_init *****************
  1008 ;; Defined at:
  1009 ;;		line 31 in file "mainP8.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;		None
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  1    wreg      void 
  1016 ;; Registers used:
  1017 ;;		None
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1023 ;;      Params:         0       0       0       0       0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1026 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1027 ;;Total ram usage:        0 bytes
  1028 ;; Hardware stack levels used: 1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_main
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text8
  1037  000BB2                     __ptext8:
  1038                           	callstack 0
  1039  000BB2                     _ports_init:
  1040                           	callstack 30
  1041  000BB2                     
  1042                           ;mainP8.c: 32:     TRISAbits.TRISA4 = 1;
  1043  000BB2  8892               	bsf	146,4,c	;volatile
  1044  000BB4  0012               	return		;funcret
  1045  000BB6                     __end_of_ports_init:
  1046                           	callstack 0
  1047                           
  1048 ;; *************** function _measure *****************
  1049 ;; Defined at:
  1050 ;;		line 34 in file "mainP8.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        0 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text9
  1078  000AD4                     __ptext9:
  1079                           	callstack 0
  1080  000AD4                     _measure:
  1081                           	callstack 30
  1082  000AD4                     
  1083                           ;mainP8.c: 36:     TMR1L = 0xEE;
  1084  000AD4  0EEE               	movlw	238
  1085  000AD6  6ECE               	movwf	206,c	;volatile
  1086                           
  1087                           ;mainP8.c: 37:     TMR1H = 0x85;
  1088  000AD8  0E85               	movlw	133
  1089  000ADA  6ECF               	movwf	207,c	;volatile
  1090  000ADC                     
  1091                           ;mainP8.c: 38:     T1GCONbits.TMR1GE = 0;
  1092  000ADC  9ECC               	bcf	204,7,c	;volatile
  1093  000ADE                     
  1094                           ;mainP8.c: 39:     PIR1bits.TMR1IF = 0;
  1095  000ADE  909E               	bcf	158,0,c	;volatile
  1096                           
  1097                           ;mainP8.c: 41:     T1CON = 0b00110001;
  1098  000AE0  0E31               	movlw	49
  1099  000AE2  6ECD               	movwf	205,c	;volatile
  1100                           
  1101                           ;mainP8.c: 43:     while(PIR1bits.TMR1IF == 0){
  1102  000AE4  EF76  F005         	goto	l954
  1103  000AE8                     l952:
  1104                           
  1105                           ;mainP8.c: 46:         T0CON = 0b11111000;
  1106  000AE8  0EF8               	movlw	248
  1107  000AEA  6ED5               	movwf	213,c	;volatile
  1108  000AEC                     l954:
  1109                           
  1110                           ;mainP8.c: 43:     while(PIR1bits.TMR1IF == 0){
  1111  000AEC  A09E               	btfss	158,0,c	;volatile
  1112  000AEE  EF7B  F005         	goto	u121
  1113  000AF2  EF7D  F005         	goto	u120
  1114  000AF6                     u121:
  1115  000AF6  EF74  F005         	goto	l952
  1116  000AFA                     u120:
  1117  000AFA                     
  1118                           ;mainP8.c: 48:     count = TMR0L;
  1119  000AFA  CFD6 F015          	movff	4054,_count	;volatile
  1120  000AFE  6A16               	clrf	(_count+1)^0,c
  1121  000B00                     
  1122                           ;mainP8.c: 49:     TMR0L = 0;
  1123  000B00  0E00               	movlw	0
  1124  000B02  6ED6               	movwf	214,c	;volatile
  1125                           
  1126                           ;mainP8.c: 50:     T1CON = 0;
  1127  000B04  0E00               	movlw	0
  1128  000B06  6ECD               	movwf	205,c	;volatile
  1129                           
  1130                           ;mainP8.c: 51:     T0CON = 0;
  1131  000B08  0E00               	movlw	0
  1132  000B0A  6ED5               	movwf	213,c	;volatile
  1133  000B0C                     
  1134                           ;mainP8.c: 52:     PIR1bits.TMR1IF = 0;
  1135  000B0C  909E               	bcf	158,0,c	;volatile
  1136  000B0E  0012               	return		;funcret
  1137  000B10                     __end_of_measure:
  1138                           	callstack 0
  1139                           
  1140 ;; *************** function _LCD_init *****************
  1141 ;; Defined at:
  1142 ;;		line 7 in file "LCD_disp_Driver.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, status,2, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1156 ;;      Params:         0       0       0       0       0       0       0       0       0
  1157 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1158 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1159 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1160 ;;Total ram usage:        1 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 1
  1163 ;; This function calls:
  1164 ;;		_LCD_cmd
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text10
  1171  000A42                     __ptext10:
  1172                           	callstack 0
  1173  000A42                     _LCD_init:
  1174                           	callstack 29
  1175  000A42                     
  1176                           ;LCD_disp_Driver.c: 8:     TRISD = 0x00;
  1177  000A42  0E00               	movlw	0
  1178  000A44  6E95               	movwf	149,c	;volatile
  1179  000A46                     
  1180                           ;LCD_disp_Driver.c: 9:     LATCbits.LATC2 = 0;
  1181  000A46  948B               	bcf	139,2,c	;volatile
  1182  000A48                     
  1183                           ;LCD_disp_Driver.c: 10:     LATCbits.LATC1 = 0;
  1184  000A48  928B               	bcf	139,1,c	;volatile
  1185  000A4A                     
  1186                           ;LCD_disp_Driver.c: 11:     LATCbits.LATC0 = 0;
  1187  000A4A  908B               	bcf	139,0,c	;volatile
  1188                           
  1189                           ;LCD_disp_Driver.c: 12:     LATC = 0;
  1190  000A4C  0E00               	movlw	0
  1191  000A4E  6E8B               	movwf	139,c	;volatile
  1192  000A50                     
  1193                           ;LCD_disp_Driver.c: 13:     TRISCbits.TRISC0 = 0;
  1194  000A50  9094               	bcf	148,0,c	;volatile
  1195  000A52                     
  1196                           ;LCD_disp_Driver.c: 14:     TRISCbits.TRISC2 = 0;
  1197  000A52  9494               	bcf	148,2,c	;volatile
  1198  000A54                     
  1199                           ;LCD_disp_Driver.c: 15:     TRISCbits.TRISC1 = 0;
  1200  000A54  9294               	bcf	148,1,c	;volatile
  1201  000A56                     
  1202                           ;LCD_disp_Driver.c: 16:     LCD_cmd(0b00111000);
  1203  000A56  0E38               	movlw	56
  1204  000A58  ECC7  F005         	call	_LCD_cmd
  1205  000A5C                     
  1206                           ;LCD_disp_Driver.c: 17:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1207  000A5C  0E52               	movlw	82
  1208  000A5E  6E02               	movwf	??_LCD_init^0,c
  1209  000A60  0E2A               	movlw	42
  1210  000A62                     u277:
  1211  000A62  2EE8               	decfsz	wreg,f,c
  1212  000A64  D7FE               	bra	u277
  1213  000A66  2E02               	decfsz	??_LCD_init^0,f,c
  1214  000A68  D7FC               	bra	u277
  1215  000A6A                     
  1216                           ;LCD_disp_Driver.c: 18:     LCD_cmd(0b00001110);
  1217  000A6A  0E0E               	movlw	14
  1218  000A6C  ECC7  F005         	call	_LCD_cmd
  1219  000A70                     
  1220                           ;LCD_disp_Driver.c: 19:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1221  000A70  0E52               	movlw	82
  1222  000A72  6E02               	movwf	??_LCD_init^0,c
  1223  000A74  0E2A               	movlw	42
  1224  000A76                     u287:
  1225  000A76  2EE8               	decfsz	wreg,f,c
  1226  000A78  D7FE               	bra	u287
  1227  000A7A  2E02               	decfsz	??_LCD_init^0,f,c
  1228  000A7C  D7FC               	bra	u287
  1229  000A7E                     
  1230                           ;LCD_disp_Driver.c: 20:     LCD_cmd(0b00000001);
  1231  000A7E  0E01               	movlw	1
  1232  000A80  ECC7  F005         	call	_LCD_cmd
  1233  000A84                     
  1234                           ;LCD_disp_Driver.c: 21:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1235  000A84  0E52               	movlw	82
  1236  000A86  6E02               	movwf	??_LCD_init^0,c
  1237  000A88  0E2A               	movlw	42
  1238  000A8A                     u297:
  1239  000A8A  2EE8               	decfsz	wreg,f,c
  1240  000A8C  D7FE               	bra	u297
  1241  000A8E  2E02               	decfsz	??_LCD_init^0,f,c
  1242  000A90  D7FC               	bra	u297
  1243  000A92  0012               	return		;funcret
  1244  000A94                     __end_of_LCD_init:
  1245                           	callstack 0
  1246                           
  1247 ;; *************** function _LCD_cmd *****************
  1248 ;; Defined at:
  1249 ;;		line 24 in file "LCD_disp_Driver.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  cx              1    wreg     unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  cx              1    0[COMRAM] unsigned char 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0
  1264 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1266 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; This function calls:
  1270 ;;		Nothing
  1271 ;; This function is called by:
  1272 ;;		_LCD_init
  1273 ;;		_set_LCD_dir
  1274 ;;		_set_cursor_pos
  1275 ;;		_move_cursor_n_times
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text11
  1280  000B8E                     __ptext11:
  1281                           	callstack 0
  1282  000B8E                     _LCD_cmd:
  1283                           	callstack 29
  1284                           
  1285                           ;incstack = 0
  1286                           ;LCD_cmd@cx stored from wreg
  1287  000B8E  6E01               	movwf	LCD_cmd@cx^0,c
  1288  000B90                     
  1289                           ;LCD_disp_Driver.c: 25:     LATCbits.LATC2 = 0;
  1290  000B90  948B               	bcf	139,2,c	;volatile
  1291                           
  1292                           ;LCD_disp_Driver.c: 26:     LATCbits.LATC1 = 0;
  1293  000B92  928B               	bcf	139,1,c	;volatile
  1294                           
  1295                           ;LCD_disp_Driver.c: 27:     LATCbits.LATC0 = 1;
  1296  000B94  808B               	bsf	139,0,c	;volatile
  1297                           
  1298                           ;LCD_disp_Driver.c: 28:     __nop();
  1299  000B96  F000               	nop	
  1300  000B98                     
  1301                           ;LCD_disp_Driver.c: 29:     LATD = cx;
  1302  000B98  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
  1303  000B9C                     
  1304                           ;LCD_disp_Driver.c: 30:     __nop();
  1305  000B9C  F000               	nop	
  1306  000B9E                     
  1307                           ;LCD_disp_Driver.c: 31:     LATCbits.LATC0 = 0;
  1308  000B9E  908B               	bcf	139,0,c	;volatile
  1309  000BA0  0012               	return		;funcret
  1310  000BA2                     __end_of_LCD_cmd:
  1311                           	callstack 0
  1312                           
  1313                           	psect	rparam
  1314  0000                     
  1315                           	psect	idloc
  1316                           
  1317                           ;Config register IDLOC0 @ 0x200000
  1318                           ;	unspecified, using default values
  1319  200000                     	org	2097152
  1320  200000  FF                 	db	255
  1321                           
  1322                           ;Config register IDLOC1 @ 0x200001
  1323                           ;	unspecified, using default values
  1324  200001                     	org	2097153
  1325  200001  FF                 	db	255
  1326                           
  1327                           ;Config register IDLOC2 @ 0x200002
  1328                           ;	unspecified, using default values
  1329  200002                     	org	2097154
  1330  200002  FF                 	db	255
  1331                           
  1332                           ;Config register IDLOC3 @ 0x200003
  1333                           ;	unspecified, using default values
  1334  200003                     	org	2097155
  1335  200003  FF                 	db	255
  1336                           
  1337                           ;Config register IDLOC4 @ 0x200004
  1338                           ;	unspecified, using default values
  1339  200004                     	org	2097156
  1340  200004  FF                 	db	255
  1341                           
  1342                           ;Config register IDLOC5 @ 0x200005
  1343                           ;	unspecified, using default values
  1344  200005                     	org	2097157
  1345  200005  FF                 	db	255
  1346                           
  1347                           ;Config register IDLOC6 @ 0x200006
  1348                           ;	unspecified, using default values
  1349  200006                     	org	2097158
  1350  200006  FF                 	db	255
  1351                           
  1352                           ;Config register IDLOC7 @ 0x200007
  1353                           ;	unspecified, using default values
  1354  200007                     	org	2097159
  1355  200007  FF                 	db	255
  1356                           
  1357                           	psect	config
  1358                           
  1359                           ;Config register CONFIG1L @ 0x300000
  1360                           ;	PLL Selection
  1361                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1362                           ;	PLL Enable Configuration bit
  1363                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1364                           ;	CPU System Clock Postscaler
  1365                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1366                           ;	Low Speed USB mode with 48 MHz system clock
  1367                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1368  300000                     	org	3145728
  1369  300000  00                 	db	0
  1370                           
  1371                           ;Config register CONFIG1H @ 0x300001
  1372                           ;	Oscillator Selection
  1373                           ;	FOSC = INTOSCIO, Internal oscillator
  1374                           ;	Primary Oscillator Shutdown
  1375                           ;	PCLKEN = ON, Primary oscillator enabled
  1376                           ;	Fail-Safe Clock Monitor
  1377                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1378                           ;	Internal/External Oscillator Switchover
  1379                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1380  300001                     	org	3145729
  1381  300001  28                 	db	40
  1382                           
  1383                           ;Config register CONFIG2L @ 0x300002
  1384                           ;	Power-up Timer Enable
  1385                           ;	nPWRTEN = OFF, Power up timer disabled
  1386                           ;	Brown-out Reset Enable
  1387                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1388                           ;	Brown-out Reset Voltage
  1389                           ;	BORV = 190, BOR set to 1.9V nominal
  1390                           ;	Low-Power Brown-out Reset
  1391                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1392  300002                     	org	3145730
  1393  300002  5F                 	db	95
  1394                           
  1395                           ;Config register CONFIG2H @ 0x300003
  1396                           ;	Watchdog Timer Enable bits
  1397                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1398                           ;	Watchdog Timer Postscaler
  1399                           ;	WDTPS = 32768, 1:32768
  1400  300003                     	org	3145731
  1401  300003  3C                 	db	60
  1402                           
  1403                           ; Padding undefined space
  1404  300004                     	org	3145732
  1405  300004  FF                 	db	255
  1406                           
  1407                           ;Config register CONFIG3H @ 0x300005
  1408                           ;	CCP2 MUX bit
  1409                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1410                           ;	PORTB A/D Enable bit
  1411                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1412                           ;	Timer3 Clock Input MUX bit
  1413                           ;	T3CMX = RC0, T3CKI function is on RC0
  1414                           ;	SDO Output MUX bit
  1415                           ;	SDOMX = RB3, SDO function is on RB3
  1416                           ;	Master Clear Reset Pin Enable
  1417                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1418  300005                     	org	3145733
  1419  300005  D3                 	db	211
  1420                           
  1421                           ;Config register CONFIG4L @ 0x300006
  1422                           ;	Stack Full/Underflow Reset
  1423                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1424                           ;	Single-Supply ICSP Enable bit
  1425                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1426                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1427                           ;	ICPRT = OFF, ICPORT disabled
  1428                           ;	Extended Instruction Set Enable bit
  1429                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1430                           ;	Background Debugger Enable bit
  1431                           ;	DEBUG = 0x1, unprogrammed default
  1432  300006                     	org	3145734
  1433  300006  85                 	db	133
  1434                           
  1435                           ; Padding undefined space
  1436  300007                     	org	3145735
  1437  300007  FF                 	db	255
  1438                           
  1439                           ;Config register CONFIG5L @ 0x300008
  1440                           ;	Block 0 Code Protect
  1441                           ;	CP0 = OFF, Block 0 is not code-protected
  1442                           ;	Block 1 Code Protect
  1443                           ;	CP1 = OFF, Block 1 is not code-protected
  1444                           ;	Block 2 Code Protect
  1445                           ;	CP2 = OFF, Block 2 is not code-protected
  1446                           ;	Block 3 Code Protect
  1447                           ;	CP3 = OFF, Block 3 is not code-protected
  1448  300008                     	org	3145736
  1449  300008  0F                 	db	15
  1450                           
  1451                           ;Config register CONFIG5H @ 0x300009
  1452                           ;	Boot Block Code Protect
  1453                           ;	CPB = OFF, Boot block is not code-protected
  1454                           ;	Data EEPROM Code Protect
  1455                           ;	CPD = OFF, Data EEPROM is not code-protected
  1456  300009                     	org	3145737
  1457  300009  C0                 	db	192
  1458                           
  1459                           ;Config register CONFIG6L @ 0x30000A
  1460                           ;	Block 0 Write Protect
  1461                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1462                           ;	Block 1 Write Protect
  1463                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1464                           ;	Block 2 Write Protect
  1465                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1466                           ;	Block 3 Write Protect
  1467                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1468  30000A                     	org	3145738
  1469  30000A  0F                 	db	15
  1470                           
  1471                           ;Config register CONFIG6H @ 0x30000B
  1472                           ;	Configuration Registers Write Protect
  1473                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1474                           ;	Boot Block Write Protect
  1475                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1476                           ;	Data EEPROM Write Protect
  1477                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1478  30000B                     	org	3145739
  1479  30000B  E0                 	db	224
  1480                           
  1481                           ;Config register CONFIG7L @ 0x30000C
  1482                           ;	Block 0 Table Read Protect
  1483                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1484                           ;	Block 1 Table Read Protect
  1485                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1486                           ;	Block 2 Table Read Protect
  1487                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1488                           ;	Block 3 Table Read Protect
  1489                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1490  30000C                     	org	3145740
  1491  30000C  0F                 	db	15
  1492                           
  1493                           ;Config register CONFIG7H @ 0x30000D
  1494                           ;	Boot Block Table Read Protect
  1495                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1496  30000D                     	org	3145741
  1497  30000D  40                 	db	64
  1498                           tosu	equ	0xFFF
  1499                           tosh	equ	0xFFE
  1500                           tosl	equ	0xFFD
  1501                           stkptr	equ	0xFFC
  1502                           pclatu	equ	0xFFB
  1503                           pclath	equ	0xFFA
  1504                           pcl	equ	0xFF9
  1505                           tblptru	equ	0xFF8
  1506                           tblptrh	equ	0xFF7
  1507                           tblptrl	equ	0xFF6
  1508                           tablat	equ	0xFF5
  1509                           prodh	equ	0xFF4
  1510                           prodl	equ	0xFF3
  1511                           indf0	equ	0xFEF
  1512                           postinc0	equ	0xFEE
  1513                           postdec0	equ	0xFED
  1514                           preinc0	equ	0xFEC
  1515                           plusw0	equ	0xFEB
  1516                           fsr0h	equ	0xFEA
  1517                           fsr0l	equ	0xFE9
  1518                           wreg	equ	0xFE8
  1519                           indf1	equ	0xFE7
  1520                           postinc1	equ	0xFE6
  1521                           postdec1	equ	0xFE5
  1522                           preinc1	equ	0xFE4
  1523                           plusw1	equ	0xFE3
  1524                           fsr1h	equ	0xFE2
  1525                           fsr1l	equ	0xFE1
  1526                           bsr	equ	0xFE0
  1527                           indf2	equ	0xFDF
  1528                           postinc2	equ	0xFDE
  1529                           postdec2	equ	0xFDD
  1530                           preinc2	equ	0xFDC
  1531                           plusw2	equ	0xFDB
  1532                           fsr2h	equ	0xFDA
  1533                           fsr2l	equ	0xFD9
  1534                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    write_string_LCD@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[7]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_write_int_LCD
    _write_string_LCD->_send_to_LCD
    _write_int_LCD->___awdiv
    ___awdiv->___wmul
    _set_cursor_pos->_LCD_cmd
    _set_LCD_dir->_LCD_cmd
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1828
                           _LCD_init
                            _measure
                         _ports_init
                        _set_LCD_dir
                     _set_cursor_pos
                      _write_int_LCD
                   _write_string_LCD
 ---------------------------------------------------------------------------------
 (1) _write_string_LCD                                     2     0      2     212
                                              2 COMRAM     2     0      2
                        _send_to_LCD
 ---------------------------------------------------------------------------------
 (1) _write_int_LCD                                        6     4      2    1276
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
                        _send_to_LCD
 ---------------------------------------------------------------------------------
 (2) _send_to_LCD                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_cursor_pos                                       5     4      1     280
                                              1 COMRAM     5     4      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _set_LCD_dir                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _measure                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _measure
   _ports_init
   _set_LCD_dir
     _LCD_cmd
   _set_cursor_pos
     _LCD_cmd
   _write_int_LCD
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _send_to_LCD
   _write_string_LCD
     _send_to_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      17       1       24.2%
BITBIGSFRll         38      0       0      27        0.0%
BITBIGSFRhlllh      2D      0       0      23        0.0%
BITBIGSFRhhh        29      0       0      20        0.0%
BITBIGSFRhllll       8      0       0      24        0.0%
BITBIGSFRlhl         5      0       0      26        0.0%
BITBIGSFRhlh         3      0       0      22        0.0%
BITBIGSFRlhh         1      0       0      25        0.0%
BITBIGSFRhhl         1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      28        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon May 16 11:42:25 2022

                        l21 0A92                          l30 0AD2                          l24 0BA0  
                        l40 09BA                          l41 09EA                          l33 0B8C  
                        l65 0992                          l59 0B44                          u70 0AA8  
                        u71 0AA4                          u80 0AC8                          u81 0AC4  
              ___awdiv@sign 000C         ___wmul@multiplicand 0003                         l112 0BB4  
                       l121 0B6A                         l117 0AFA                         l118 0B0E  
                       l352 08D6                         l800 0B9E                         l810 0B7C  
                       l802 0B6E                         l900 0ACE                         l812 0B7E  
                       l804 0B74                         l806 0B78                         l808 0B7A  
                       l870 0A4A                         l950 0ADE                         l880 0A5C  
                       l872 0A50                         l864 0A42                         l952 0AE8  
                       l944 0BB2                         l794 0B90                         l882 0A6A  
                       l874 0A52                         l866 0A46                         l954 0AEC  
                       l946 0AD4                         l890 0A96                         l796 0B98  
                       l884 0A70                         l876 0A54                         l868 0A48  
                       l956 0B00                         l948 0ADC                         l892 0AA8  
                       l798 0B9C                         l886 0A7E                         l878 0A56  
                       l958 0B0C                         l894 0AAE                         l888 0A84  
                       l896 0AB6                         l898 0AC8                         u120 0AFA  
                       u200 0884                         u121 0AF6                         u201 0880  
                       u210 08A0                         u211 089C                         u220 08C6  
                       u221 08C2                         u230 0B44                         u231 0B40  
                       u240 094C                         u241 0948                         u170 0826  
                       u250 097A                         u171 0822                         u251 0976  
                       u180 0840                         u181 083C                         u190 0866  
                       u191 0862                         u267 0B84                         u277 0A62  
                       u287 0A76                         u297 0A8A                         wreg 000FE8  
           __end_of_LCD_cmd 0BA2                        l1010 0818                        l1002 0B46  
                      l1020 0848                        l1012 0826                        l1004 0B62  
                      l1100 0A04                        l1030 0876                        l1022 084C  
                      l1014 082E                        l1110 0A2E                        l1102 0A0E  
                      l1040 08AA                        l1032 0884                        l1024 0854  
                      l1016 0832                        l1008 0814                        l1104 0A1A  
                      l1042 08B0                        l1034 088A                        l1026 0866  
                      l1018 0840                        l1106 0A20                        l1116 09D4  
                      l1060 09B0                        l1052 0996                        l1036 08A0  
                      l1028 086E                        l1044 08B6                        l1108 0A2A  
                      l1054 099A                        l1046 08C6                        l1038 08A8  
                      l1070 0B10                        l1056 09A0                        l1064 09C0  
                      l1048 08CE                        l1080 08E0                        l1072 0B14  
                      l1058 09AA                        l1090 0968                        l1082 08F8  
                      l1074 0B24                        l1092 097A                        l1084 0926  
                      l1076 0B28                        l1086 093A                        l1078 08D8  
                      l1094 09EC                        l1088 094C                        l1096 09F0  
                      l1098 09F8                        STR_1 0801                        STR_2 080C  
                      _LATC 000F8B                        _LATD 000F8C                        _main 09EC  
                      prodh 000FF4                        prodl 000FF3                        start 0000  
              ___param_bank 000000            __end_of_LCD_init 0A94                       ?_main 0001  
           __end_of___awdiv 08D8                       _T0CON 000FD5             ___awdiv@divisor 0009  
                     _T1CON 000FCD             ___awdiv@counter 000B                       _TMR1H 000FCF  
                     _TMR0L 000FD6                       _TMR1L 000FCE                       _TRISD 000F95  
           __end_of_measure 0B10                       _count 0015              write_int_LCD@x 000F  
                     tablat 000FF5                       status 000FD8             __initialization 0BA2  
              ?_set_LCD_dir 0001                __end_of_main 0A42           set_cursor_pos@Pos 0006  
         set_cursor_pos@col 0002           set_cursor_pos@row 0005                      ??_main 0015  
             __activetblptr 000002                   ??_LCD_cmd 0001                ?_send_to_LCD 0001  
          ___awdiv@dividend 0007                      _LCDdir 0017                      _OSCCON 000FD3  
                    ___wmul 0B46                   ??___awdiv 000B            ___awdiv@quotient 000D  
write_int_LCD@HundrethDigit 0014                      isa$std 000001                   ??_measure 0001  
              __mediumconst 0000                      tblptrh 000FF7                      tblptrl 000FF6  
                    tblptru 000FF8                  __accesstop 0060     __end_of__initialization 0BA8  
                 ?_LCD_init 0001               ___rparam_used 000001              __pcstackCOMRAM 0001  
                 LCD_cmd@cx 0001            _write_string_LCD 0B10                  ??_LCD_init 0002  
                   ?___wmul 0001                     _LCD_cmd 0B8E               _write_int_LCD 08D8  
                   __Hparam 0000                     __Lparam 0000                     ___awdiv 0814  
              __psmallconst 0800                     __pcinit 0BA2                     __ramtop 0800  
                   __ptext0 09EC                     __ptext1 0B10                     __ptext2 08D8  
                   __ptext3 0B6C                     __ptext4 0B46                     __ptext5 0814  
                   __ptext6 0994                     __ptext7 0A94                     __ptext8 0BB2  
                   __ptext9 0AD4                     _measure 0AD4        end_of_initialization 0BA8  
         write_string_LCD@s 0003               __Lmediumconst 0000              ?_write_int_LCD 000F  
            _set_cursor_pos 0994      write_int_LCD@UnitDigit 0012                   _TRISAbits 000F92  
                 _TRISCbits 000F94                  _ports_init 0BB2    __end_of_write_string_LCD 0B46  
             send_to_LCD@xy 0002              __end_of___wmul 0B6C      __end_of_set_cursor_pos 09EC  
       start_initialization 0BA2             ??_write_int_LCD 0011                    ??___wmul 0005  
              set_LCD_dir@d 0002             ?_set_cursor_pos 0002                    ?_LCD_cmd 0001  
               __pbssCOMRAM 0015                 ?_ports_init 0001               ??_set_LCD_dir 0002  
                  ?___awdiv 0007                 __smallconst 0800                    ?_measure 0001  
             ??_send_to_LCD 0001              ___wmul@product 0005                    _LATCbits 000F8B  
                  _LCD_init 0A42                    _PIR1bits 000F9E         __end_of_set_LCD_dir 0AD4  
         ___wmul@multiplier 0001           ?_write_string_LCD 0003         __end_of_send_to_LCD 0B8E  
        ??_write_string_LCD 0005                    __Hrparam 0000                    __Lrparam 0000  
                  __ptext10 0A42                    __ptext11 0B8E                  _T1GCONbits 000FCC  
          ??_set_cursor_pos 0003                    isa$xinst 000000                 _set_LCD_dir 0A94  
              ??_ports_init 0001                 _send_to_LCD 0B6C       __end_of_write_int_LCD 0994  
        __end_of_ports_init 0BB6     write_int_LCD@TenthDigit 0013  
